{"version":3,"file":"static/js/957.75aa43a5.chunk.js","mappings":"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","sources":["components/form/Input.tsx","components/ui/Button/Button.tsx","components/form/Form.tsx","components/container/AdaptiveContainer.tsx","components/ui/Cards/HomeCard.tsx","utils/capitalize.ts","pages/Home/index.ts","pages/Home/Home.tsx"],"sourcesContent":["import TextField from '@mui/material/TextField';\nimport { TProps } from 'types/tForm';\n\nexport const Input = ({ register, error, handleChange, values }: TProps) => {\n    return (\n        <TextField\n            id=\"ttn\"\n            label=\"TTN *\"\n            variant=\"outlined\"\n            error={!!error.ttn}\n            focused={!!values?.ttn}\n            {...register('ttn')}\n            onChange={handleChange}\n            helperText={error.ttn?.message}\n            sx={{\n                width: '100%',\n                '& label.Mui-focused': {\n                    color: 'violet.main'\n                },\n                '& label.Mui-focused.Mui-error': {\n                    color: 'error.main'\n                },\n                '& .MuiOutlinedInput-root.Mui-focused': {\n                    '& fieldset': {\n                        borderColor: 'violet.main'\n                    }\n                },\n                '& .MuiOutlinedInput-root.Mui-focused.Mui-error': {\n                    '& fieldset': {\n                        borderColor: 'error.main'\n                    }\n                }\n            }}\n        />\n    );\n};\n","import { Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nexport const CustomButton = styled(Button)(({ theme }) => ({\n    backgroundColor: theme.palette.violet.main,\n    color: theme.palette.violet.contrastText,\n    border: '1px solid transparent',\n    '&:hover': {\n        color: theme.palette.violet.main,\n        backgroundColor: theme.palette.background.paper,\n        border: `1px solid ${theme.palette.violet.main}`\n    },\n    '&.MuiButtonBase-root.Mui-disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n    }\n}));\n","import { Paper, CircularProgress, Box, Typography } from '@mui/material';\nimport { Input } from 'components/form';\nimport { CustomButton } from 'components/ui/Button';\nimport { useHandleForm } from 'hooks';\n\nexport const Form = () => {\n    const {\n        register,\n        error,\n        handleSubmit,\n        onSubmit,\n        onError,\n        handleChange,\n        values,\n        loading\n    } = useHandleForm();\n\n    return (\n        <Paper\n            component={'form'}\n            autoComplete={'off'}\n            onSubmit={handleSubmit(onSubmit, onError)}\n            elevation={4}\n            sx={{ p: 4 }}\n        >\n            <Input\n                register={register}\n                error={error}\n                handleChange={handleChange}\n                values={values}\n            />\n            <CustomButton\n                sx={{ mt: 4, width: '100%' }}\n                aria-label={'submit'}\n                type={'submit'}\n                disabled={loading === 'pending'}\n            >\n                {loading === 'pending' ? (\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center'\n                        }}\n                    >\n                        <Typography\n                            variant={'button'}\n                            component={'p'}\n                            sx={{ mr: 2 }}\n                        >\n                            Loading...\n                        </Typography>\n                        {\n                            <CircularProgress\n                                size={'1em'}\n                                sx={{ color: 'violet.main' }}\n                            />\n                        }\n                    </Box>\n                ) : (\n                    'get status ttn'\n                )}\n            </CustomButton>\n        </Paper>\n    );\n};\n","import { Container } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nexport const AdaptiveContainer = styled(Container)(({ theme }) => ({\n    padding: 0,\n    [theme.breakpoints.up('mobile')]: {\n        maxWidth: theme.breakpoints.values.mobile\n    },\n    [theme.breakpoints.up('tablet')]: {\n        maxWidth: theme.breakpoints.values.tablet\n    },\n    [theme.breakpoints.up('laptop')]: {\n        maxWidth: theme.breakpoints.values.laptop\n    },\n    [theme.breakpoints.up('desktop')]: {\n        maxWidth: theme.breakpoints.values.desktop\n    }\n}));\n","import { useSelector } from 'react-redux';\nimport { Box, Paper, Typography, Skeleton } from '@mui/material';\nimport { capitalize } from 'utils/capitalize';\nimport { selectService } from 'redux/selectors';\n\nexport const HomeCard = () => {\n    const {\n        loading,\n        data: { data }\n    } = useSelector(selectService);\n\n    const items: {\n        name: string;\n        field: string;\n    }[] = [\n        { name: 'status', field: data?.[0].Status as string },\n        { name: 'sender', field: data?.[0].WarehouseSender as string },\n        { name: 'receiver', field: data?.[0].WarehouseRecipient as string }\n    ];\n\n    return loading !== 'idle' ? (\n        <Paper sx={{ mt: 4, p: 2 }} elevation={4}>\n            <Box\n                component={'ul'}\n                sx={{\n                    p: 0,\n                    m: 0\n                }}\n            >\n                {items.map(({ name, field }) => (\n                    <Box\n                        component={'li'}\n                        key={name}\n                        sx={{\n                            listStyle: 'none',\n                            '&:not(:last-child)': {\n                                mb: 1\n                            }\n                        }}\n                    >\n                        <Typography\n                            variant={'h6'}\n                            component={'p'}\n                            sx={{ fontSize: 16 }}\n                        >\n                            {loading === 'pending' ? (\n                                <Skeleton />\n                            ) : (\n                                `${capitalize(name)}: ${field}`\n                            )}\n                        </Typography>\n                    </Box>\n                ))}\n            </Box>\n        </Paper>\n    ) : null;\n};\n","export const capitalize = (word: string) => {\n    const capitalized = word.replace(/\\w/, (value) => value.toUpperCase());\n    return capitalized;\n};\n","import Home from './Home';\n\nexport default Home;\n","import { Form } from 'components/form';\nimport { Box, Typography } from '@mui/material';\nimport { AdaptiveContainer } from 'components/container';\nimport { HomeCard } from 'components/ui/Cards';\n\nconst Home = () => {\n    return (\n        <AdaptiveContainer>\n            <Box component={'main'}>\n                <Typography\n                    component={'h1'}\n                    variant={'h4'}\n                    sx={{ mb: 3, fontWeight: '500' }}\n                >\n                    Delivery checker\n                </Typography>\n                <Form />\n                <HomeCard />\n            </Box>\n        </AdaptiveContainer>\n    );\n};\n\nexport default Home;\n"],"names":["Input","_ref","_error$ttn","register","error","handleChange","values","_jsx","TextField","_objectSpread","id","label","variant","ttn","focused","onChange","helperText","message","sx","width","color","borderColor","CustomButton","styled","Button","theme","backgroundColor","palette","violet","main","contrastText","border","background","paper","concat","action","disabledBackground","Form","_useHandleForm","useHandleForm","handleSubmit","onSubmit","onError","loading","_jsxs","Paper","component","autoComplete","elevation","p","children","mt","type","disabled","Box","display","justifyContent","alignItems","Typography","mr","CircularProgress","size","AdaptiveContainer","Container","_ref2","padding","_defineProperty","breakpoints","up","maxWidth","mobile","tablet","laptop","desktop","HomeCard","_useSelector","useSelector","selectService","data","items","name","field","Status","WarehouseSender","WarehouseRecipient","m","map","word","listStyle","mb","fontSize","Skeleton","replace","value","toUpperCase","fontWeight"],"sourceRoot":""}