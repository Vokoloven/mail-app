{"version":3,"file":"static/js/399.7463a3e9.chunk.js","mappings":"iKAGaA,GAAoBC,E,QAAAA,IAAOC,EAAAA,EAAPD,EAAkB,SAAAE,GAAA,IAAAC,EAAGC,EAAKF,EAALE,MAAK,OAAAD,EAAA,CACvDE,QAAS,IAACC,EAAAA,EAAAA,GAAAH,EACTC,EAAMG,YAAYC,GAAG,UAAY,CAC9BC,SAAUL,EAAMG,YAAYG,OAAOC,UACtCL,EAAAA,EAAAA,GAAAH,EACAC,EAAMG,YAAYC,GAAG,UAAY,CAC9BC,SAAUL,EAAMG,YAAYG,OAAOE,UACtCN,EAAAA,EAAAA,GAAAH,EACAC,EAAMG,YAAYC,GAAG,UAAY,CAC9BC,SAAUL,EAAMG,YAAYG,OAAOG,UACtCP,EAAAA,EAAAA,GAAAH,EACAC,EAAMG,YAAYC,GAAG,WAAa,CAC/BC,SAAUL,EAAMG,YAAYG,OAAOI,UACtCX,CAAA,G,sJCXQY,EAAW,WACpB,IAAAC,GAGIC,EAAAA,EAAAA,IAAYC,EAAAA,GAFZC,EAAOH,EAAPG,QACQC,EAAIJ,EAAZI,KAAQA,KAGNC,EAGA,CACF,CAAEC,KAAM,SAAUC,MAAW,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAO,GAAGI,QACnC,CAAEF,KAAM,SAAUC,MAAW,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAO,GAAGK,iBACnC,CAAEH,KAAM,WAAYC,MAAW,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAO,GAAGM,qBAGzC,MAAmB,SAAZP,GACHQ,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,GAAI,CAAEC,GAAI,EAAGC,EAAG,GAAKC,UAAW,EAAEC,UACrCN,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CACAC,UAAW,KACXN,GAAI,CACAE,EAAG,EACHK,EAAG,GACLH,SAEDZ,EAAMgB,KACH,SAAAnC,GAAA,IC9BOoC,ED8BJhB,EAAIpB,EAAJoB,KAAMC,EAAKrB,EAALqB,MAAK,OACVA,IACII,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CACAC,UAAW,KAEXN,GAAI,CACAU,UAAW,OACX,qBAAsB,CAClBC,GAAI,IAEVP,UAEFN,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACPC,QAAS,KACTP,UAAW,IACXN,GAAI,CAAEc,SAAU,IAAKV,SAER,YAAZd,GACGQ,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,IAAG,GAAAC,QChDzBP,EDkD2BhB,ECjD9BgB,EAAKQ,QAAQ,MAAM,SAACC,GAAK,OAAKA,EAAMC,aAAa,KDiDd,MAAAH,OAAKtB,MAhB3BD,EAoBZ,QAIjB,IACR,E,8BEvDa2B,EAAgBC,EAAAA,YAG3B,SAAAhD,EAA+CiD,GAAS,IAADC,EAAAlD,EAApDmD,UAAaC,EAAWF,EAAXE,YAAaC,EAAYH,EAAZG,aA8C3B,OA7CgBJ,GACZxB,EAAAA,EAAAA,KAAC6B,EAAAA,EAAI,CACDL,IAAKA,EACLtB,GAAI,CACA4B,SAAU,IACV,oBAAqB,CACjBjB,GAAI,IAGZR,UAAW,EAAEC,UAEbyB,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAAA1B,SAAA,EACRN,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACPZ,GAAI,CAAEc,SAAU,GAAIiB,WAAY,QAChCC,MAAM,iBACNC,cAAY,EAAA7B,SAEXqB,EAAYS,MAAM,qIAEvBpC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACoB,MAAM,iBAAgB5B,SAAEsB,UAI5C5B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAI,CACD3B,GAAI,CACA4B,SAAU,IACV,oBAAqB,CACjBjB,GAAI,IAGZR,UAAW,EAAEC,UAEbyB,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAAA1B,SAAA,EACRN,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACPZ,GAAI,CAAEc,SAAU,GAAIiB,WAAY,QAChCC,MAAM,iBACNC,cAAY,EAAA7B,SAEXqB,EAAYS,MAAM,qIAEvBpC,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACoB,MAAM,iBAAgB5B,SAAEsB,QAMpD,G,qGCnDaS,EAAQ,SAAH9D,GAA2D,IAAD+D,EAApDC,EAAQhE,EAARgE,SAAUC,EAAKjE,EAALiE,MAAOC,EAAYlE,EAAZkE,aAAc1D,EAAMR,EAANQ,OACnD,OACIiB,EAAAA,EAAAA,KAAC0C,EAAAA,GAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACNC,GAAG,MACHC,MAAM,QACN9B,QAAQ,WACRyB,QAASA,EAAMM,IACfC,UAAiB,OAANhE,QAAM,IAANA,IAAAA,EAAQ+D,MACfP,EAAS,QAAM,IACnBS,SAAUP,EACVQ,WAAqB,QAAXX,EAAEE,EAAMM,WAAG,IAAAR,OAAA,EAATA,EAAWY,QACvBhD,GAAI,CACAiD,MAAO,OACP,sBAAuB,CACnBjB,MAAO,eAEX,gCAAiC,CAC7BA,MAAO,cAEX,uCAAwC,CACpC,aAAc,CACVkB,YAAa,gBAGrB,iDAAkD,CAC9C,aAAc,CACVA,YAAa,kBAMrC,E,iDChCaC,GAAehF,E,QAAAA,IAAOiF,EAAAA,EAAPjF,EAAe,SAAAE,GAAA,IAAGE,EAAKF,EAALE,MAAK,MAAQ,CACvD8E,gBAAiB9E,EAAM+E,QAAQC,OAAOC,KACtCxB,MAAOzD,EAAM+E,QAAQC,OAAOE,aAC5BC,OAAQ,wBACR,UAAW,CACP1B,MAAOzD,EAAM+E,QAAQC,OAAOC,KAC5BH,gBAAiB9E,EAAM+E,QAAQK,WAAWC,MAC1CF,OAAO,aAAD1C,OAAezC,EAAM+E,QAAQC,OAAOC,OAE9C,oCAAqC,CACjCH,gBAAiB9E,EAAM+E,QAAQO,OAAOC,oBAE7C,I,UCVYC,EAAO,WAChB,IAAAC,GASIC,EAAAA,EAAAA,MARA5B,EAAQ2B,EAAR3B,SACAC,EAAK0B,EAAL1B,MACA4B,EAAYF,EAAZE,aACAC,EAAQH,EAARG,SACAC,EAAOJ,EAAPI,QACA7B,EAAYyB,EAAZzB,aACA1D,EAAMmF,EAANnF,OACAS,EAAO0E,EAAP1E,QAGJ,OACIuC,EAAAA,EAAAA,MAAC9B,EAAAA,EAAK,CACFO,UAAW,OACX+D,aAAc,MACdF,SAAUD,EAAaC,EAAUC,GACjCjE,UAAW,EACXH,GAAI,CAAEE,EAAG,GAAIE,SAAA,EAEbN,EAAAA,EAAAA,KAACqC,EAAK,CACFE,SAAUA,EACVC,MAAOA,EACPC,aAAcA,EACd1D,OAAQA,KAEZiB,EAAAA,EAAAA,KAACqD,EAAY,CACTnD,GAAI,CAAEC,GAAI,EAAGgD,MAAO,QACpB,aAAY,SACZqB,KAAM,SACNC,SAAsB,YAAZjF,EAAsBc,SAEnB,YAAZd,GACGuC,EAAAA,EAAAA,MAACxB,EAAAA,EAAG,CACAL,GAAI,CACAwE,QAAS,OACTC,eAAgB,SAChBC,WAAY,UACdtE,SAAA,EAEFN,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACPC,QAAS,SACTP,UAAW,IACXN,GAAI,CAAE2E,GAAI,GAAIvE,SACjB,gBAIGN,EAAAA,EAAAA,KAAC8E,EAAAA,EAAgB,CACbC,KAAM,MACN7E,GAAI,CAAEgC,MAAO,oBAKzB,qBAKpB,E,oBC/DA,ECGa,WACT,OACIlC,EAAAA,EAAAA,KAAC5B,EAAAA,EAAiB,CAAAkC,UACdyB,EAAAA,EAAAA,MAACxB,EAAAA,EAAG,CAACC,UAAW,OAAOF,SAAA,EACnBN,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACPN,UAAW,KACXO,QAAS,KACTb,GAAI,CAAEW,GAAI,EAAGoB,WAAY,OAAQ3B,SACpC,sBAGDN,EAAAA,EAAAA,KAACiE,EAAI,KACLjE,EAAAA,EAAAA,KAACZ,EAAAA,EAAQ,QAIzB,C","sources":["components/container/AdaptiveContainer.tsx","components/ui/Cards/HomeCard.tsx","utils/capitalize.ts","components/ui/Cards/WarehouseCard.tsx","components/form/Input.tsx","components/ui/Button/Button.tsx","components/form/Form.tsx","pages/Home/index.ts","pages/Home/Home.tsx"],"sourcesContent":["import { Container } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nexport const AdaptiveContainer = styled(Container)(({ theme }) => ({\n    padding: 0,\n    [theme.breakpoints.up('mobile')]: {\n        maxWidth: theme.breakpoints.values.mobile\n    },\n    [theme.breakpoints.up('tablet')]: {\n        maxWidth: theme.breakpoints.values.tablet\n    },\n    [theme.breakpoints.up('laptop')]: {\n        maxWidth: theme.breakpoints.values.laptop\n    },\n    [theme.breakpoints.up('desktop')]: {\n        maxWidth: theme.breakpoints.values.desktop\n    }\n}));\n","import { useSelector } from 'react-redux';\nimport { Box, Paper, Typography, Skeleton } from '@mui/material';\nimport { capitalize } from 'utils/capitalize';\nimport { selectService } from 'redux/selectors';\n\nexport const HomeCard = () => {\n    const {\n        loading,\n        data: { data }\n    } = useSelector(selectService);\n\n    const items: {\n        name: string;\n        field: string;\n    }[] = [\n        { name: 'status', field: data?.[0].Status! },\n        { name: 'sender', field: data?.[0].WarehouseSender! },\n        { name: 'receiver', field: data?.[0].WarehouseRecipient! }\n    ];\n\n    return loading !== 'idle' ? (\n        <Paper sx={{ mt: 4, p: 2 }} elevation={4}>\n            <Box\n                component={'ul'}\n                sx={{\n                    p: 0,\n                    m: 0\n                }}\n            >\n                {items.map(\n                    ({ name, field }) =>\n                        field && (\n                            <Box\n                                component={'li'}\n                                key={name}\n                                sx={{\n                                    listStyle: 'none',\n                                    '&:not(:last-child)': {\n                                        mb: 1\n                                    }\n                                }}\n                            >\n                                <Typography\n                                    variant={'h6'}\n                                    component={'p'}\n                                    sx={{ fontSize: 16 }}\n                                >\n                                    {loading === 'pending' ? (\n                                        <Skeleton />\n                                    ) : (\n                                        `${capitalize(name)}: ${field}`\n                                    )}\n                                </Typography>\n                            </Box>\n                        )\n                )}\n            </Box>\n        </Paper>\n    ) : null;\n};\n","export const capitalize = (word: string) => {\n    const capitalized = word.replace(/\\w/, (value) => value.toUpperCase());\n    return capitalized;\n};\n","import React from 'react';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport { TWarehouseProps } from 'types/tWarehouse';\n\nexport const WarehouseCard = React.forwardRef<\n    any,\n    { warehouse: TWarehouseProps<string> }\n>(({ warehouse: { Description, ShortAddress } }, ref) => {\n    const content = ref ? (\n        <Card\n            ref={ref}\n            sx={{\n                minWidth: 275,\n                '&:not(last-child)': {\n                    mb: 2\n                }\n            }}\n            elevation={4}\n        >\n            <CardContent>\n                <Typography\n                    sx={{ fontSize: 14, fontWeight: 'bold' }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                >\n                    {Description.match(/[а-щА-ЩЬьЮюЯяЇїІіЄєҐґ' №\\d\"()]+/)}\n                </Typography>\n                <Typography color=\"text.secondary\">{ShortAddress}</Typography>\n            </CardContent>\n        </Card>\n    ) : (\n        <Card\n            sx={{\n                minWidth: 275,\n                '&:not(last-child)': {\n                    mb: 2\n                }\n            }}\n            elevation={4}\n        >\n            <CardContent>\n                <Typography\n                    sx={{ fontSize: 14, fontWeight: 'bold' }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                >\n                    {Description.match(/[а-щА-ЩЬьЮюЯяЇїІіЄєҐґ' №\\d\"()]+/)}\n                </Typography>\n                <Typography color=\"text.secondary\">{ShortAddress}</Typography>\n            </CardContent>\n        </Card>\n    );\n\n    return content;\n});\n","import TextField from '@mui/material/TextField';\nimport { TProps } from 'types/tForm';\n\nexport const Input = ({ register, error, handleChange, values }: TProps) => {\n    return (\n        <TextField\n            id=\"ttn\"\n            label=\"TTN *\"\n            variant=\"outlined\"\n            error={!!error.ttn}\n            focused={!!values?.ttn}\n            {...register('ttn')}\n            onChange={handleChange}\n            helperText={error.ttn?.message}\n            sx={{\n                width: '100%',\n                '& label.Mui-focused': {\n                    color: 'violet.main'\n                },\n                '& label.Mui-focused.Mui-error': {\n                    color: 'error.main'\n                },\n                '& .MuiOutlinedInput-root.Mui-focused': {\n                    '& fieldset': {\n                        borderColor: 'violet.main'\n                    }\n                },\n                '& .MuiOutlinedInput-root.Mui-focused.Mui-error': {\n                    '& fieldset': {\n                        borderColor: 'error.main'\n                    }\n                }\n            }}\n        />\n    );\n};\n","import { Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nexport const CustomButton = styled(Button)(({ theme }) => ({\n    backgroundColor: theme.palette.violet.main,\n    color: theme.palette.violet.contrastText,\n    border: '1px solid transparent',\n    '&:hover': {\n        color: theme.palette.violet.main,\n        backgroundColor: theme.palette.background.paper,\n        border: `1px solid ${theme.palette.violet.main}`\n    },\n    '&.MuiButtonBase-root.Mui-disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n    }\n}));\n","import { Paper, CircularProgress, Box, Typography } from '@mui/material';\nimport { Input } from 'components/form';\nimport { CustomButton } from 'components/ui/Button';\nimport { useHandleForm } from 'hooks';\n\nexport const Form = () => {\n    const {\n        register,\n        error,\n        handleSubmit,\n        onSubmit,\n        onError,\n        handleChange,\n        values,\n        loading\n    } = useHandleForm();\n\n    return (\n        <Paper\n            component={'form'}\n            autoComplete={'off'}\n            onSubmit={handleSubmit(onSubmit, onError)}\n            elevation={4}\n            sx={{ p: 4 }}\n        >\n            <Input\n                register={register}\n                error={error}\n                handleChange={handleChange}\n                values={values}\n            />\n            <CustomButton\n                sx={{ mt: 4, width: '100%' }}\n                aria-label={'submit'}\n                type={'submit'}\n                disabled={loading === 'pending'}\n            >\n                {loading === 'pending' ? (\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center'\n                        }}\n                    >\n                        <Typography\n                            variant={'button'}\n                            component={'p'}\n                            sx={{ mr: 2 }}\n                        >\n                            Loading...\n                        </Typography>\n                        {\n                            <CircularProgress\n                                size={'1em'}\n                                sx={{ color: 'violet.main' }}\n                            />\n                        }\n                    </Box>\n                ) : (\n                    'get status ttn'\n                )}\n            </CustomButton>\n        </Paper>\n    );\n};\n","import Home from './Home';\n\nexport default Home;\n","import { Form } from 'components/form';\nimport { Box, Typography } from '@mui/material';\nimport { AdaptiveContainer } from 'components/container';\nimport { HomeCard } from 'components/ui/Cards';\n\nconst Home = () => {\n    return (\n        <AdaptiveContainer>\n            <Box component={'main'}>\n                <Typography\n                    component={'h1'}\n                    variant={'h4'}\n                    sx={{ mb: 3, fontWeight: '500' }}\n                >\n                    Delivery checker\n                </Typography>\n                <Form />\n                <HomeCard />\n            </Box>\n        </AdaptiveContainer>\n    );\n};\n\nexport default Home;\n"],"names":["AdaptiveContainer","styled","Container","_ref","_ref2","theme","padding","_defineProperty","breakpoints","up","maxWidth","values","mobile","tablet","laptop","desktop","HomeCard","_useSelector","useSelector","selectService","loading","data","items","name","field","Status","WarehouseSender","WarehouseRecipient","_jsx","Paper","sx","mt","p","elevation","children","Box","component","m","map","word","listStyle","mb","Typography","variant","fontSize","Skeleton","concat","replace","value","toUpperCase","WarehouseCard","React","ref","_ref$warehouse","warehouse","Description","ShortAddress","Card","minWidth","_jsxs","CardContent","fontWeight","color","gutterBottom","match","Input","_error$ttn","register","error","handleChange","TextField","_objectSpread","id","label","ttn","focused","onChange","helperText","message","width","borderColor","CustomButton","Button","backgroundColor","palette","violet","main","contrastText","border","background","paper","action","disabledBackground","Form","_useHandleForm","useHandleForm","handleSubmit","onSubmit","onError","autoComplete","type","disabled","display","justifyContent","alignItems","mr","CircularProgress","size"],"sourceRoot":""}