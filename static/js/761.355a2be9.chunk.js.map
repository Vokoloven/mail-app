{"version":3,"file":"static/js/761.355a2be9.chunk.js","mappings":"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","sources":["components/container/AdaptiveContainer.tsx","components/ui/Cards/HomeCard.tsx","utils/capitalize.ts","components/ui/Cards/WarehouseCard.tsx","pages/Office/index.ts","pages/Office/Office.tsx"],"sourcesContent":["import { Container } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nexport const AdaptiveContainer = styled(Container)(({ theme }) => ({\n    padding: 0,\n    [theme.breakpoints.up('mobile')]: {\n        maxWidth: theme.breakpoints.values.mobile\n    },\n    [theme.breakpoints.up('tablet')]: {\n        maxWidth: theme.breakpoints.values.tablet\n    },\n    [theme.breakpoints.up('laptop')]: {\n        maxWidth: theme.breakpoints.values.laptop\n    },\n    [theme.breakpoints.up('desktop')]: {\n        maxWidth: theme.breakpoints.values.desktop\n    }\n}));\n","import { useSelector } from 'react-redux';\nimport { Box, Paper, Typography, Skeleton } from '@mui/material';\nimport { capitalize } from 'utils/capitalize';\nimport { selectService } from 'redux/selectors';\n\nexport const HomeCard = () => {\n    const {\n        loading,\n        data: { data }\n    } = useSelector(selectService);\n\n    const items: {\n        name: string;\n        field: string;\n    }[] = [\n        { name: 'status', field: data?.[0].Status! },\n        { name: 'sender', field: data?.[0].WarehouseSender! },\n        { name: 'receiver', field: data?.[0].WarehouseRecipient! }\n    ];\n\n    return loading !== 'idle' ? (\n        <Paper sx={{ mt: 4, p: 2 }} elevation={4}>\n            <Box\n                component={'ul'}\n                sx={{\n                    p: 0,\n                    m: 0\n                }}\n            >\n                {items.map(\n                    ({ name, field }) =>\n                        field && (\n                            <Box\n                                component={'li'}\n                                key={name}\n                                sx={{\n                                    listStyle: 'none',\n                                    '&:not(:last-child)': {\n                                        mb: 1\n                                    }\n                                }}\n                            >\n                                <Typography\n                                    variant={'h6'}\n                                    component={'p'}\n                                    sx={{ fontSize: 16 }}\n                                >\n                                    {loading === 'pending' ? (\n                                        <Skeleton />\n                                    ) : (\n                                        `${capitalize(name)}: ${field}`\n                                    )}\n                                </Typography>\n                            </Box>\n                        )\n                )}\n            </Box>\n        </Paper>\n    ) : null;\n};\n","export const capitalize = (word: string) => {\n    const capitalized = word.replace(/\\w/, (value) => value.toUpperCase());\n    return capitalized;\n};\n","import React from 'react';\nimport { Card, CardContent, Typography, Skeleton } from '@mui/material';\nimport { TWarehouseProps } from 'types/tWarehouse';\n\nexport const WarehouseCard = React.forwardRef<\n    any,\n    {\n        warehouse: TWarehouseProps<string>;\n        loading: 'idle' | 'pending' | 'succeeded' | 'failed';\n    }\n>(({ warehouse: { Description, ShortAddress }, loading }, ref) => {\n    const content = ref ? (\n        <Card\n            ref={ref}\n            sx={{\n                minWidth: 275,\n                '&:not(last-child)': {\n                    mb: 2\n                }\n            }}\n            elevation={4}\n        >\n            <CardContent>\n                <Typography\n                    sx={{ fontSize: 14, fontWeight: 'bold' }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                >\n                    {loading === 'pending' ? (\n                        <Skeleton />\n                    ) : (\n                        Description.match(/[а-щА-ЩЬьЮюЯяЇїІіЄєҐґ' №\\d\"()]+/)\n                    )}\n                </Typography>\n                <Typography color=\"text.secondary\">\n                    {' '}\n                    {loading === 'pending' ? <Skeleton /> : ShortAddress}\n                </Typography>\n            </CardContent>\n        </Card>\n    ) : (\n        <Card\n            sx={{\n                minWidth: 275,\n                '&:not(last-child)': {\n                    mb: 2\n                }\n            }}\n            elevation={4}\n        >\n            <CardContent>\n                <Typography\n                    sx={{ fontSize: 14, fontWeight: 'bold' }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                >\n                    {loading === 'pending' ? (\n                        <Skeleton />\n                    ) : (\n                        Description.match(/[а-щА-ЩЬьЮюЯяЇїІіЄєҐґ' №\\d\"()]+/)\n                    )}\n                </Typography>\n                <Typography color=\"text.secondary\">\n                    {loading === 'pending' ? <Skeleton /> : ShortAddress}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n\n    return content;\n});\n","import Office from './Office';\n\nexport default Office;\n","import { WarehouseCard } from 'components/ui/Cards';\nimport { Typography, Box, CircularProgress } from '@mui/material';\nimport { AdaptiveContainer } from 'components/container';\nimport { useInfinityScroll } from 'hooks';\n\nconst Office = () => {\n    const { loading, warehouses, lastOfWarehouses } = useInfinityScroll();\n\n    const content = warehouses?.map((warehouse, i) => {\n        if (warehouses?.length === i + 1) {\n            return (\n                <WarehouseCard\n                    ref={lastOfWarehouses}\n                    key={warehouse.SiteKey}\n                    warehouse={warehouse}\n                    loading={loading}\n                />\n            );\n        }\n        return (\n            <WarehouseCard\n                key={warehouse.SiteKey}\n                warehouse={warehouse}\n                loading={loading}\n            />\n        );\n    });\n\n    return (\n        <AdaptiveContainer>\n            <Typography\n                component={'h1'}\n                variant={'h4'}\n                sx={{ mb: 3, fontWeight: '500' }}\n            >\n                Office location\n            </Typography>\n            <Box\n                sx={(theme) => ({\n                    [theme.breakpoints.up('tablet')]: {\n                        maxWidth: '420px',\n                        ...(loading !== 'pending' && { pb: 8 })\n                    }\n                })}\n            >\n                {content}\n            </Box>\n            {loading === 'pending' && (\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        pb: 4\n                    }}\n                >\n                    <Typography component={'p'} variant={'h6'} sx={{ mr: 3 }}>\n                        Loading...\n                    </Typography>\n                    <CircularProgress sx={{ color: 'violet.main' }} />\n                </Box>\n            )}\n        </AdaptiveContainer>\n    );\n};\n\nexport default Office;\n"],"names":["AdaptiveContainer","styled","Container","_ref","_ref2","theme","padding","_defineProperty","breakpoints","up","maxWidth","values","mobile","tablet","laptop","desktop","HomeCard","_useSelector","useSelector","selectService","loading","data","items","name","field","Status","WarehouseSender","WarehouseRecipient","_jsx","Paper","sx","mt","p","elevation","children","Box","component","m","map","word","listStyle","mb","Typography","variant","fontSize","Skeleton","concat","replace","value","toUpperCase","WarehouseCard","React","ref","_ref$warehouse","warehouse","Description","ShortAddress","Card","minWidth","_jsxs","CardContent","fontWeight","color","gutterBottom","match","_useInfinityScroll","useInfinityScroll","warehouses","lastOfWarehouses","content","i","length","SiteKey","_objectSpread","pb","display","justifyContent","alignItems","mr","CircularProgress"],"sourceRoot":""}